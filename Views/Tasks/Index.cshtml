@using MVCSimpleCRM.ViewModels;
@model IndexTaskViewModel

<script type="text/javascript">
    document.addEventListener('readystatechange', event => {
        switch (document.readyState) {
            case "complete":
                const date = new Date();

                const dateFrom = document.getElementById("DateFrom");
                const dateTo = document.getElementById("DateTo");

                dateFrom.value = formatDate(date);
                dateTo.value = formatDate(addDays(date, 7));

                var SortBy = 0;
                var DateFrom = document.getElementById('DateFrom').value;
                var DateTo = document.getElementById('DateTo').value;
                var DateType = document.getElementById('DateType').value;
                var SearchedTaskTitle = document.getElementById('TBSearch').value;

                $.get("/tasks/RefreshTasks3", { SearchedTaskTitle: SearchedTaskTitle, SortBy: SortBy, DateFrom: DateFrom, DateTo: DateTo, DateType: DateType, Page: 1 }, function (data) {
                    $("#_TasksIndexContainer").html(data);
                })
                break;
        }
    });

    function ColorStatus(Type, Status) {
        if(Type == 1)
            if(Status == 'NZR')
                document.getElementById('CreatorStatusColor').style.backgroundColor = "lightblue";
    }

    function DateTypeChange(Type) {
        if (Type == 'UTW')
            document.getElementById('DateType').value = "Utworzenia";
        else if (Type == 'PRZ')
            document.getElementById('DateType').value = "Przypomnienia";
        else if (Type == 'AKT')
            document.getElementById('DateType').value = "Aktualizacji";
        else if (Type == 'ZAK')
            document.getElementById('DateType').value = "Zakończenia";
    }

    function formatDate(dateToFormat) {
        var result = dateToFormat.getFullYear() + "-"; //+ (dateToFormat.getMonth() + 1) + "-";//+ dateToFormat.getDate();
        if (dateToFormat.getMonth() < 10) {
            result = result + "0" + dateToFormat.getMonth() + "-";
        }
        else {
            result = result + dateToFormat.getMonth() + "-";
        }

        if (dateToFormat.getDate() < 10) {
            result = result + "0" + dateToFormat.getDate();
        }
        else {
            result = result + dateToFormat.getDate();
        }
        return result;
    }

    function addDays(date, days) {
        var result = new Date(date);
        result.setDate(result.getDate() + days);
        return result;
    }

    function SearchTasks(SearchedTaskTitle) {
        //var jsonString = JSON.stringify(Html.Raw(Json.Serialize(Model)));
        var SortBy = 0;
        var DateFrom = document.getElementById('DateFrom').value;
        var DateTo = document.getElementById('DateTo').value;
        var DateType = document.getElementById('DateType').value;
        document.getElementById('CurrentPage').innerHTML = 1;

        switch (true) {
            case document.getElementById('DateUpcomingDeadline').checked:
                SortBy = 1;
                break;
            case document.getElementById('DateFarthestDeadline').checked:
                SortBy = 2;
                break;
            case document.getElementById('DateNewest').checked:
                SortBy = 3;
                break;
            case document.getElementById('SearchedTaskName').checked:
                SortBy = 4;
                break;
            case document.getElementById('DateUpcomingReminder').checked:
                SortBy = 5;
                break;
            case document.getElementById('DateFarthestReminder').checked:
                SortBy = 6;
                break;
        }

        //$.get("/tasks/RefreshTasks2", { json: jsonString, SearchedTaskTitle: SearchedTaskTitle, SortBy: SortBy, DateFrom: DateFrom, DateTo: DateTo, DateType: DateType}, function (data) {
        $.get("/tasks/RefreshTasks3", { SearchedTaskTitle: SearchedTaskTitle, SortBy: SortBy, DateFrom: DateFrom, DateTo: DateTo, DateType: DateType, Page: 1}, function (data) {
            $("#_TasksIndexContainer").html(data);
        })
    }

    function SearchUsers(SearchedUser) {
        $.get("/account/RefreshSearchedUsers", { SearchedUser: SearchedUser }, function (data) {
            $("#_SearchedUsersContainer").html(data);
        })
    }

    function PreviousPage() {
        var CurrentPage = document.getElementById('CurrentPage').innerHTML;
        if (CurrentPage != 1){
            //var jsonString = JSON.stringify(Html.Raw(Json.Serialize(Model)));
            var SortBy = 0;
            var DateFrom = document.getElementById('DateFrom').value;
            var DateTo = document.getElementById('DateTo').value;
            var DateType = document.getElementById('DateType').value;
            var SearchedTaskTitle = document.getElementById('TBSearch').value;

            switch (true) {
                case document.getElementById('DateUpcomingDeadline').checked:
                    SortBy = 1;
                    break;
                case document.getElementById('DateFarthestDeadline').checked:
                    SortBy = 2;
                    break;
                case document.getElementById('DateNewest').checked:
                    SortBy = 3;
                    break;
                case document.getElementById('SearchedTaskName').checked:
                    SortBy = 4;
                    break;
                case document.getElementById('DateUpcomingReminder').checked:
                    SortBy = 5;
                    break;
                case document.getElementById('DateFarthestReminder').checked:
                    SortBy = 6;
                    break;
            }

            $.get("/tasks/PreviousPage", { SearchedTaskTitle: SearchedTaskTitle, SortBy: SortBy, DateFrom: DateFrom, DateTo: DateTo, DateType: DateType, CurrentPage: CurrentPage}, function (data) {
                $("#_TasksIndexContainer").html(data);
            })
            document.getElementById('CurrentPage').innerHTML = (parseInt(CurrentPage) - 1);
        }
    }

    function NextPage() {

        var Key = "PageAmount";

        $.get("/tasks/RetriveSessionData", { Key: Key }, function (data) {
            var LastPage = data;
            var CurrentPage = document.getElementById('CurrentPage').innerHTML;

            if (CurrentPage != LastPage) {
                var SortBy = 0;
                var DateFrom = document.getElementById('DateFrom').value;
                var DateTo = document.getElementById('DateTo').value;
                var DateType = document.getElementById('DateType').value;
                var SearchedTaskTitle = document.getElementById('TBSearch').value;

                switch (true) {
                    case document.getElementById('DateUpcomingDeadline').checked:
                        SortBy = 1;
                        break;
                    case document.getElementById('DateFarthestDeadline').checked:
                        SortBy = 2;
                        break;
                    case document.getElementById('DateNewest').checked:
                        SortBy = 3;
                        break;
                    case document.getElementById('SearchedTaskName').checked:
                        SortBy = 4;
                        break;
                    case document.getElementById('DateUpcomingReminder').checked:
                        SortBy = 5;
                        break;
                    case document.getElementById('DateFarthestReminder').checked:
                        SortBy = 6;
                        break;
                }

                $.get("/tasks/NextPage", { SearchedTaskTitle: SearchedTaskTitle, SortBy: SortBy, DateFrom: DateFrom, DateTo: DateTo, DateType: DateType, CurrentPage: CurrentPage }, function (data) {
                    $("#_TasksIndexContainer").html(data);
                })
                document.getElementById('CurrentPage').innerHTML = (parseInt(CurrentPage) + 1);
            }
        })
    }
    
</script>

<section class="jumbotron text-center">
    <div class="container">
        <h1 class="jumbotron-heading">Zadania</h1>
    </div>
</section>

<section>
    <div class="album py-5 bg-light">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-3">
                    <div class="card mb-4 box-shadow">
                        <div class="card-body">
                            <center>
                                <h3>Filtracja</h3>
                            </center>

                            <br />
                            <div class="form-group" style="margin-bottom: 20px">
                                <input type="text" class="form-control" ID="TBSearch" placeholder="Wyszukaj pracownika" onchange="SearchUsers(document.getElementById('TBSearch').value)">
                            </div>

                            <div id="_SearchedUsersContainer">
                                @Html.Partial("_SearchedUsers")
                            </div>

                            <div class="row">
                                <div class="col">
                                    <center>
                                        <hr />
                                    </center>
                                </div>
                            </div>

                            <div class="input-group col-md-3" style="margin-bottom: 20px">
                                <input type="text" readonly="true" id="DateType" class="form-control" value="Zakończenia" placeholder="Rodzaj daty">
                                <div class="dropdown m-1 mt-0 mb-0">
                                    <a class="btn btn-secondary dropdown-toggle" style="width: 100px" href="#" role="button"  data-bs-toggle="dropdown" aria-expanded="false">
                                        Wybierz
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                        <li><a class="dropdown-item" OnClick="DateTypeChange('UTW')">Utworzenia</a></li>
                                        <li><a class="dropdown-item" OnClick="DateTypeChange('PRZ')">Przypomnienia</a></li>
                                        <li><a class="dropdown-item" OnClick="DateTypeChange('AKT')">Aktualizacji</a></li>
                                        <li><a class="dropdown-item" OnClick="DateTypeChange('ZAK')">Zakończenia</a></li>
                                    </ul>
                                </div>
                            </div>

                            <div class="input-group col-md-3" style="margin-bottom: 20px">
                                <input type="date" id="DateFrom" class="form-control" min="2000-01-01" max="2060-12-31">
                                <input type="date" id="DateTo" class="form-control" min="2000-01-01" max="2060-12-31">
                            </div>

                            <div class="row">
                                <div class="col">
                                    <center>
                                        <hr />
                                    </center>
                                </div>
                            </div>

                            <label>Sort by:</label>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="flexRadioDefault" id="DateUpcomingDeadline" checked runat="server">
                                <label class="form-check-label" for="flexRadioDefault2">
                                    Najbliższy termin
                                </label>
                            </div>

                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="flexRadioDefault" id="DateFarthestDeadline" runat="server">
                                <label class="form-check-label" for="flexRadioDefault1">
                                    Najdalszy termin
                                </label>
                            </div>

                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="flexRadioDefault" id="DateNewest" runat="server">
                                <label class="form-check-label" for="flexRadioDefault1">
                                    Najnowsze
                                </label>
                            </div>

                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="flexRadioDefault" id="DateOldest" runat="server">
                                <label class="form-check-label" for="flexRadioDefault1">
                                    Najstarsze
                                </label>
                            </div>

                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="flexRadioDefault" id="DateUpcomingReminder" runat="server">
                                <label class="form-check-label" for="flexRadioDefault1">
                                    Najbliższe przypomnienie
                                </label>
                            </div>

                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="flexRadioDefault" id="DateFarthestReminder" runat="server">
                                <label class="form-check-label" for="flexRadioDefault1">
                                    Najdalsze przypomnienie
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="row">
                        <div class="col-md-7" style="margin-bottom: 20px">
                            <a type="btn" style="padding-right: 10px; height: 100%; display: flex; align-items:center; justify-content:center;" class="btn btn-sm btn-outline-primary" asp-controller="Tasks" asp-action="Create">Utwórz</a>
                        </div>
                        <div class="col-md-5">

                            <div class="input-group col-md-3" style="margin-bottom: 20px">

                                <input type="text" class="form-control" Style="width: 200px;" id="SearchedTaskName" placeholder="Jakiego zadania szukasz?">
                                <button type="button" class="btn btn-sm btn-outline-secondary" id="BtnSearch" onclick="SearchTasks(document.getElementById('SearchedTaskName').value)" Style="width: 120px;">Wyszukaj</button>

                            </div>
                        </div>
                    </div>
                    <div id="_TasksIndexContainer">
                        @Html.Partial("_TasksIndex")
                    </div>
                    <div id="Pagination">
                    <center>
                            <button type="button" class="btn btn-sm btn-outline-primary" id="PreviousPage" onclick="PreviousPage()"><</button>
                            <button type="button" class="btn btn-sm btn-outline-primary" id="CurrentPage" onclick="">1</button>
                            <button type="button" class="btn btn-sm btn-outline-primary" id="NextPage" onclick="NextPage()">></button>
                    </center>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>